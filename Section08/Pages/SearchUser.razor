@page "/SearchUser"
@using AutoMapper
@using Microsoft.AspNetCore.Components.Forms
@using Section08.DataAccess.Dto
@using Section08.DataAccess.Repositories
@using Section08.Models

@inject IMapper Mapper;
@inject IUserRepository UserRepo;

<PageTitle>Search User</PageTitle>
<h3>Search User</h3>

<div>
    <label for="search">Search:</label>
    <InputText id="search" @bind-Value="_searchString" />
    <button class="btn btn-primary" @onclick="HandleSearch">Search</button>
</div>

<table class="table">
    <thead>
    <tr>
        <th>ID</th>
        <th>First Name</th>
        <th>Last Name</th>
    </tr>
    </thead>

    <tbody>
    @foreach (var user in _searchResult)
    {
        <tr>
            <td>@user.Id</td>
            <td>@user.FirstName</td>
            <td>@user.LastName</td>
        </tr>
    }
    </tbody>
</table>

@code {
    private readonly List<User> _allUsers = new();
    private readonly List<User> _searchResult = new();
    private string _searchString = string.Empty;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        // populate users
        var dto = UserRepo.Get().OrderBy(x => x.Id);
        _allUsers.Clear();
        _allUsers.AddRange(dto.Select(x => Mapper.Map<UserDto, User>(x)));
        HandleSearch();
    }

    private void HandleSearch()
    {
        _searchResult.Clear();
        _searchResult.AddRange(string.IsNullOrEmpty(_searchString) ? _allUsers : _allUsers.Where(x => x.FullName.Contains(_searchString)));
    }
}
